#usda 1.0
(
    defaultPrim = "PyramidModel"
    metersPerUnit = 0.01
    upAxis = "Z"
)

def Xform "PyramidModel" (
    assetInfo = {
        asset identifier = @./PyramidModel.usda@
        string name = "PyramidModel"
    }
    kind = "component"
    variants = {
        string shadingVariant = "Red"
    }
    add variantSets = "shadingVariant"
)
{
    def Xform "Geom"
    {
        def Mesh "Pyramid"
        {
            float3[] extent = [(-0.70710677, -0.35355338, -0.70710677), (0.70710677, 0.35355338, 0.70710677)]
            int[] faceVertexCounts = [4, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 3, 2, 1, 0, 1, 4, 1, 2, 4, 2, 3, 4, 3, 0, 4]
            point3f[] points = [(9.272585e-8, -0.35355338, -0.70710677), (-0.70710677, -0.35355338, -6.181724e-8), (-3.090862e-8, -0.35355338, 0.70710677), (0.70710677, -0.35355338, 0), (0, 0.35355338, 0)]
        }
    }
    variantSet "shadingVariant" = {
        "Blue" {
            over "Geom"
            {
                over "Pyramid" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </PyramidModel/Materials/BlueMaterial>
                    color3f[] primvars:displayColor = [(0, 0, 1)]
                }
            }

        }
        "Green" {
            over "Geom"
            {
                over "Pyramid" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </PyramidModel/Materials/GreenMaterial>
                    color3f[] primvars:displayColor = [(0, 1, 0)]
                }
            }

        }
        "Red" {
            over "Geom"
            {
                over "Pyramid" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </PyramidModel/Materials/RedMaterial>
                    color3f[] primvars:displayColor = [(1, 0, 0)]
                }
            }

        }
    }

    def Scope "Materials"
    {
        def Material "BaseMaterial"
        {
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            token outputs:surface.connect = </PyramidModel/Materials/BaseMaterial/PreviewSurface.outputs:surface>

            def Shader "PreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </PyramidModel/Materials/BaseMaterial.inputs:diffuseColor>
                float inputs:roughness = 1
                token outputs:surface
            }
        }

        def Material "BlueMaterial" (
            prepend specializes = </PyramidModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (0, 0, 1)
        }

        def Material "GreenMaterial" (
            prepend specializes = </PyramidModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (0, 1, 0)
        }

        def Material "RedMaterial" (
            prepend specializes = </PyramidModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (1, 0, 0)
        }
    }
}
